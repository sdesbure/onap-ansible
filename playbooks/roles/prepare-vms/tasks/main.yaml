---
- name: check if vm is using resolvconf service or not
  stat:
    path: /etc/resolvconf/
  register: resolvconf

- name: add dns own server entry in resolvconf head
  lineinfile:
    path: /etc/resolvconf/resolv.conf.d/head
    line: "nameserver {{ dns_ip_addr }}"
    insertafter: EOF
  when: resolvconf.stat.exists and inventory_hostname not in groups['dns']
  notify: update resolvconf

- name: add dns own server entry in resolv.conf
  lineinfile:
    path: /etc/resolv.conf
    line: "nameserver {{ dns_ip_addr }}"
    insertbefore: BOF
  when: not (resolvconf.stat.exists or inventory_hostname in groups['dns'])

- name: add dns own server entry in dhclient.conf so it's OK on reboot
  lineinfile:
    path: /etc/dhcp/dhclient.conf
    line: "prepend domain-name-servers {{ dns_ip_addr }};"
    insertafter: "^#prepend"
  when: not (resolvconf.stat.exists or inventory_hostname in groups['dns'])

- name: install required packages
  include_tasks: install_DEBIAN.yaml
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: upgrade pip
  pip:
    name: pip
    state: latest
  when: inventory_hostname in groups['docker']

- name: install docker python package
  pip:
    name: docker
    state: present
  when: inventory_hostname in groups['docker']

- name: create filesystem
  filesystem:
    fstype: ext4
    dev: "{{ volume_dev}}"
  when: inventory_hostname in groups['volume']

- name: add filesystem to mount part
  mount:
    path: "{{ volume_location }}"
    src: "{{ volume_dev}}"
    fstype: ext4
    opts: defaults,noatime
    state: mounted
  when: inventory_hostname in groups['volume']

- name: Log into private ONAP registry
  docker_login:
    registry: "{{ nexus_docker_repo }}"
    username: "{{ nexus_username }}"
    password: "{{ nexus_password }}"
    reauthorize: "yes"
  tags:
    - creation
  when: inventory_hostname in groups['private_docker']

- name: add '/' at the end of default_docker_repo if needed
  set_fact:
    default_docker_repo:
      "{{ default_docker_repo }}\
       {{ (default_docker_repo[-1:] == '/') | ternary('', '/') }}"
  when: default_docker_repo is defined and
        inventory_hostname in groups['docker']

- name: set default_docker_repo to '' when not defined
  set_fact:
    default_docker_repo: ""
  when: default_docker_repo is not defined and
        inventory_hostname in groups['docker']

- name: retrieve docker images
  docker_image:
    name: "{{ item }}"
    state: present
  with_items: "{{ containers }}"
  when: inventory_hostname in groups['docker']
